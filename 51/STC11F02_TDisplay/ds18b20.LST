C51 COMPILER V9.50a   DS18B20                                                              04/16/2015 14:34:21 PAGE 1   


C51 COMPILER V9.50a, COMPILATION OF MODULE DS18B20
OBJECT MODULE PLACED IN ds18b20.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ds18b20.c ROM(SMALL) BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include "ds18b20.h"
   2          #include "delay.h"
   3          
   4          //初始化
   5          void DS18B20_Init(void)
   6          {
   7   1              DS18B20_Reset();                // 开机先转换一次
   8   1              DS18B20_WriteByte(0xCC);        // Skip ROM
   9   1              DS18B20_WriteByte(0x44);        // 发转换命令
  10   1      }
  11          
  12          //重置
  13          void DS18B20_Reset(void)
  14          {
  15   1              char presence=1;
  16   1              while(presence)
  17   1              {
  18   2                      while(presence)
  19   2                      {
  20   3                              DQ = 1;_nop_();_nop_();
  21   3                              DQ = 0;    //
  22   3                              delay_us(550);          // 550us
  23   3                              DQ = 1;    // 
  24   3                              delay_us(70);           // 66us
  25   3                              presence = DQ;          // presence=0继续下一步
  26   3                      }
  27   2                      delay_us(500);                  //延时500us
  28   2                      presence = ~DQ;
  29   2              }
  30   1              DQ=1;
  31   1      } 
  32          
  33          //写一个字节
  34          void DS18B20_WriteByte(unsigned char byte)
  35          {
  36   1              unsigned char i;
  37   1              for (i = 8; i > 0; i--) //
  38   1              {
  39   2                      DQ = 1;_nop_();_nop_(); 
  40   2                      DQ = 0;_nop_();_nop_();_nop_();_nop_();_nop_();//5us
  41   2                      DQ = byte & 0x01;       //最低位移出
  42   2                      delay_us(70);           //66us
  43   2                      byte = byte / 2;        //右移一位
  44   2              }
  45   1              DQ = 1;
  46   1              delay_us(10); 
  47   1      
  48   1      }
  49          
  50          //读一个字节
  51          unsigned char DS18B20_ReadByte(void)
  52          {
  53   1              unsigned char i;
  54   1              unsigned char value = 0;
  55   1              for (i = 8; i > 0; i--)
C51 COMPILER V9.50a   DS18B20                                                              04/16/2015 14:34:21 PAGE 2   

  56   1              {
  57   2                      DQ = 1;_nop_();_nop_();
  58   2                      value >>= 1;
  59   2                      DQ = 0;_nop_();_nop_();_nop_();_nop_();   //4us
  60   2                      DQ = 1;_nop_();_nop_();_nop_();_nop_();   //4us 
  61   2                      if(DQ)
  62   2                              value |= 0x80;
  63   2                      delay_us(70);           //66us
  64   2              }
  65   1              DQ = 1;
  66   1              return(value);
  67   1      }
  68          
  69          //读取温度
  70          unsigned int DS18B20_ReadTemperature(void)
  71          {
  72   1              unsigned int t;
  73   1              unsigned char temp_data[2]={0x00,0x00};
  74   1              
  75   1              DS18B20_Reset();                                //总线复位
  76   1              DS18B20_WriteByte(0xCC);                        // 发Skip ROM命令
  77   1              DS18B20_WriteByte(0xBE);                        // 发读命令
  78   1              
  79   1              temp_data[0] = DS18B20_ReadByte(); //温度低8位
  80   1              temp_data[1] = DS18B20_ReadByte(); //温度高8位
  81   1              t = temp_data[1];
  82   1              t = t << 8;
  83   1              t = temp_data[0];
  84   1      
  85   1              DS18B20_Reset();
  86   1              DS18B20_WriteByte(0xCC);                        // Skip ROM
  87   1              DS18B20_WriteByte(0x44);                        // 发转换命令
  88   1              
  89   1              return t;
  90   1      }
  91          
  92          //转换温度
  93          void DS18B20_ConvTemperature(unsigned int value)
  94          {
  95   1      //      uchar n=0;
  96   1      //      uchar doth,dotl;
  97   1      //      uchar flag, flag3=1,flag2=1;       //数字显示修正标记
  98   1      //      
  99   1      //      if((temp_data[1]&0xf8)!=0x00)
 100   1      //      {
 101   1      //              temp_data[1]=~(temp_data[1]);
 102   1      //              temp_data[0]=~(temp_data[0])+1;
 103   1      //              n=1;
 104   1      //              flag=1;
 105   1      //      }//负温度求补码
 106   1      
 107   1      //      if(temp_data[0]>255)
 108   1      //      {
 109   1      //              temp_data[1]++; 
 110   1      //      }
 111   1      
 112   1      //      display[4]=temp_data[0]&0x0f;
 113   1      //      display[0]=ditab[display[4]];
 114   1      //      doth=display[0]/10;
 115   1      //      dotl=display[0]%10;
 116   1      //      display[4]=((temp_data[0]&0xf0)>>4)|((temp_data[1]&0x07)<<4);
 117   1      //      display[3]=display[4]/100;
C51 COMPILER V9.50a   DS18B20                                                              04/16/2015 14:34:21 PAGE 3   

 118   1      //      display[2]=display[4]/10%10;
 119   1      //      display[1]=display[4]%10;
 120   1      //      if(!display[3])
 121   1      //      {
 122   1      //              display[3]=0x0a;
 123   1      //              flag3=0;
 124   1      //              if(!display[2])
 125   1      //              {
 126   1      //                      display[2]=0x0a;
 127   1      //                      flag2=0;
 128   1      //              }
 129   1      //      }//最高位为0时都不显示
 130   1      //      
 131   1      //      if(n)
 132   1      //      {
 133   1      //              display[3]=0x0b;//负温度时最高位显示"-"
 134   1      //              flag3=0;
 135   1      //      }
 136   1      }
*** WARNING C280 IN LINE 93 OF ds18b20.c: 'value': unreferenced local variable


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    240    ----
   CONSTANT SIZE    =      2    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      10
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
